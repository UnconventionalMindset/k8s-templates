apiVersion: apps/v1
kind: Deployment
metadata:
  name: radarr
  namespace: rr
spec:
  replicas: 1
  selector:
    matchLabels:
      app: radarr
  template:
    metadata:
      name: radarr
      labels:
        app: radarr
    spec:
      volumes:
        - name: radarr-config-nfs
          persistentVolumeClaim:
            claimName: radarr-config-nfs
        - name: rr-media-nfs
          persistentVolumeClaim:
            claimName: rr-media-nfs
      containers:
        - name: radarr
          image: lscr.io/linuxserver/radarr:5.28.0
          ports:
            - containerPort: 7878
          volumeMounts:
            - name: rr-media-nfs
              mountPath: /data/films
              subPath: "films/"
            - name: rr-media-nfs
              mountPath: /data/anime
              subPath: "anime/"
            - name: rr-media-nfs
              mountPath: /data/downloads
              subPath: "downloads/"
            - name: rr-media-nfs
              mountPath: /data/incomplete
              subPath: "incomplete/"
            - name: radarr-config-nfs
              mountPath: /config
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: Europe/Zurich
---
apiVersion: v1
kind: Service
metadata:
  name: radarr-svc
  namespace: rr
  annotations:
    metallb.universe.tf/loadBalancerIPs: 192.168.31.241
spec:
  selector:
    app: radarr
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 7878
  type: LoadBalancer
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: radarr
  namespace: rr
  annotations:
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`radarr.umhomelab.com`)
      kind: Rule
      middlewares:
        - name: authentik
          namespace: auth
      services:
        - name: radarr-svc
          namespace: rr
          port: 80
  tls: {}
