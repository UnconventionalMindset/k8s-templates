apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: jellyfin
  name: jellyfin
  namespace: jellyfin
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: jellyfin
  template:
    metadata:
      labels:
        app: jellyfin
      # annotations:
      #   k8s.v1.cni.cncf.io/networks: '[
      #       {
      #          "name" : "lan-network",
      #          "namespace": "default",
      #          "interface": "eth1"
      #       }
      #     ]'
    spec:
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        # runAsNonRoot: true
        runAsUser: 1000
        supplementalGroups:
          # `render` group for transcoding
          - 105
          # `video` group for transcoding
          - 39
        fsGroupChangePolicy: "OnRootMismatch"
      nodeName: hs
      volumes:
      - name: jellyfin-media
        persistentVolumeClaim:
          claimName: jellyfin-media-nfs
      - name: jellyfin-config
        persistentVolumeClaim:
          claimName: jellyfin-config-nfs
      - name: video
        hostPath:
          path: /dev/dri
      containers:
      - env:
        - name: JELLYFIN_PublishedServerUrl 
          value: 192.168.31.244 # The IP number for your jellyfin server (see service config)
        - name: PGID
          value: "1000"
        - name: PUID
          value: "1000"
        - name: TZ
          value: Europe/Zurich
        securityContext:
          runAsGroup: 1000
          runAsUser: 1000
          privileged: true # Container must run as privileged inside of the pod, required for hardware acceleration
        image: docker.io/jellyfin/jellyfin:10.10.5
        imagePullPolicy: "IfNotPresent"
        name: jellyfin
        ports:
        - containerPort: 8096
          name: http-tcp
          protocol: TCP
        - containerPort: 8920
          name: https-tcp
          protocol: TCP
        - containerPort: 1900
          name: dlna-udp
          protocol: UDP
        - containerPort: 7359
          name: discovery-udp
          protocol: UDP      
        resources: {}
        stdin: true
        tty: true
        volumeMounts:
          - mountPath: /mnt/films
            name: jellyfin-media
            subPath: "films/"
          - mountPath: /mnt/series
            name: jellyfin-media
            subPath: "series/"
          - mountPath: /mnt/anime
            name: jellyfin-media
            subPath: "anime/"
          - mountPath: /config
            name: jellyfin-config
            subPath: "config/"
          - mountPath: /cache
            name: jellyfin-config
            subPath: "cache/"
          - mountPath: /dev/dri
            name: video
      dnsPolicy: ClusterFirst
      restartPolicy: Always
---
kind: Service
apiVersion: v1
metadata:
  name: jellyfin-udp       # < name of the service
  namespace: jellyfin      # < namespace where to place service
  annotations:
    metallb.universe.tf/allow-shared-ip: jellyfin # # < annotation name to combine the Service IP, make sure it's same name as in the service UDP yaml
spec:
  selector:
    app: jellyfin          # < reference to the deployment (connects the service with the deployment)
  ports:
  - port: 1900             # < port to open on the outside on the server
    targetPort: 1900       # < targetport. port on the pod to passthrough
    name: dlna-udp         # < reference name for the port in the deployment yaml
    protocol: UDP
  - port: 7359
    targetPort: 7359
    name: discovery-udp
    protocol: UDP
  type: LoadBalancer
  loadBalancerIP: 192.168.31.244 # < IP to access your jellyfinserver. Should be one from the MetalLB range and the same as the UDP yaml
  sessionAffinity: ClientIP # This is necessary for multi-replica deployments
---
kind: Service
apiVersion: v1
metadata:
  name: jellyfin-tcp       # < name of the service
  namespace: jellyfin      # < namespace where to place service
  annotations:
    metallb.universe.tf/allow-shared-ip: jellyfin # < annotation name to combine the Service IP, make sure it's same name as in the service UDP yaml
spec:
  selector:
    app: jellyfin          # < reference to the deployment (connects the service with the deployment)
  ports:
  - port: 8096             # < port to open on the outside on the server
    targetPort: 8096       # < targetport. port on the pod to passthrough
    name: http-tcp         # < reference name for the port in the deployment yaml
    protocol: TCP
  - port: 8920
    targetPort: 8920
    name: https-tcp
  type: LoadBalancer
  loadBalancerIP: 192.168.31.244 # < IP to access your jellyfinserver. Should be one from the MetalLB range and the same as the TCP yaml
  sessionAffinity: ClientIP # This is necessary for multi-replica deployments

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jellyfin
  namespace: jellyfin
spec:
  rules:
    - host: jellyfin.umhomelab.com
      http:
        paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: jellyfin-tcp
              port:
                name: http-tcp