---
# Source: immich/templates/machine-learning.yaml
apiVersion: v1
kind: Service
metadata:
  name: immich-machine-learning
  namespace: immich
  labels:
    app.kubernetes.io/service: immich-machine-learning
    app.kubernetes.io/instance: immich
    app.kubernetes.io/name: machine-learning
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 3003
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/instance: immich
    app.kubernetes.io/name: machine-learning
---
# Source: immich/templates/server.yaml
apiVersion: v1
kind: Service
metadata:
  name: immich-server
  namespace: immich
  labels:
    app.kubernetes.io/service: immich-server
    app.kubernetes.io/instance: immich
    app.kubernetes.io/name: server
  annotations:
spec:
  type: ClusterIP
  ports:
    - port: 3001
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/instance: immich
    app.kubernetes.io/name: server
---
# Source: immich/templates/machine-learning.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-machine-learning
  namespace: immich
  labels:
    app.kubernetes.io/instance: immich
    app.kubernetes.io/name: machine-learning
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: machine-learning
      app.kubernetes.io/instance: immich
  template:
    metadata:
      labels:
        app.kubernetes.io/name: machine-learning
        app.kubernetes.io/instance: immich
    spec:
      
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: immich-machine-learning
          image: ghcr.io/immich-app/immich-machine-learning:v1.113.0
          imagePullPolicy: IfNotPresent
          env:
            - name: DB_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: immich-secret
                  key: immich-db-name
            - name: DB_HOSTNAME
              valueFrom:
                secretKeyRef:
                  name: immich-secret
                  key: immich-db-hostname
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich-secret
                  key: immich-db-password
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: immich-secret
                  key: immich-db-username
            - name: IMMICH_MACHINE_LEARNING_URL
              value: http://immich-machine-learning:3003
            - name: IMMICH_PGID
              value: "1000"
            - name: IMMICH_PUID
              value: "1000"
            - name: REDIS_HOSTNAME
              valueFrom:
                secretKeyRef:
                  name: immich-secret
                  key: immich-redis-hostname
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich-secret
                  key: immich-redis-password
            - name: TRANSFORMERS_CACHE
              value: /cache
          ports:
            - name: http
              containerPort: 3003
              protocol: TCP
          volumeMounts:
            - name: cache
              mountPath: /cache
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
      volumes:
        - name: cache
          emptyDir:
            {}
---
# Source: immich/templates/server.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: immich-server
  namespace: immich
  labels:
    app.kubernetes.io/instance: immich
    app.kubernetes.io/name: server
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: server
      app.kubernetes.io/instance: immich
  template:
    metadata:
      labels:
        app.kubernetes.io/name: server
        app.kubernetes.io/instance: immich
    spec:
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
        fsGroupChangePolicy: "OnRootMismatch"
      serviceAccountName: default
      automountServiceAccountToken: true
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: immich-server
          image: ghcr.io/immich-app/immich-server:v1.112.1
          imagePullPolicy: IfNotPresent
          env:
            - name: DB_DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: immich-secret
                  key: immich-db-name
            - name: DB_HOSTNAME
              valueFrom:
                secretKeyRef:
                  name: immich-secret
                  key: immich-db-hostname
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich-secret
                  key: immich-db-password
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: immich-secret
                  key: immich-db-username
            - name: IMMICH_MACHINE_LEARNING_URL
              value: http://immich-machine-learning:3003
            - name: IMMICH_PGID
              value: "1000"
            - name: IMMICH_PUID
              value: "1000"
            - name: REDIS_HOSTNAME
              valueFrom:
                secretKeyRef:
                  name: immich-secret
                  key: immich-redis-hostname
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: immich-secret
                  key: immich-redis-password
          ports:
            - name: http
              containerPort: 3001
              protocol: TCP
          volumeMounts:
            - name: library
              mountPath: /usr/src/app/upload
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/server-info/ping
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /api/server-info/ping
              port: http
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 1
      volumes:
        - name: library
          persistentVolumeClaim:
            claimName: photos-nfs
